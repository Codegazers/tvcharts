{"version":3,"sources":["img/ian-ray.jpg","views/About.js","views/BestWorst.js","views/Episode.js","views/Header.js","views/Home.js","views/List.js","views/Loading.js","api.js","pageTitle.js","views/Search.js","views/SearchForm.js","views/ShowPoster.js","views/SearchResults.js","windowResize.js","views/Seasons.js","views/Show.js","views/ShowDetails.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","About","Container","className","Image","id","src","ian","roundedCircle","Col","sm","md","lg","href","BestWorst","props","useState","best","setBest","worst","setworst","useEffect","seasons","sort","a","b","averageRating","slice","reverse","Row","length","episodes","Episode","episode","ep","setEp","handleHover","e","z","target","closest","style","zIndex","tipT","scale","tipV","Math","floor","rel","data-tip","data-for","tconst","onMouseOver","onMouseOut","type","title","numVotes","toLocaleString","Header","path","setPath","location","useLocation","pathname","spacer","xs","to","logo","fluid","Home","List","list","setList","map","i","key","toFixed","Loading","message","setMsg","Spinner","animation","variant","url","process","search","fetch","encodeURIComponent","then","res","json","data","show","poster","text","response","sorted","reduce","r","seasonNumber","push","episodeNumber","Object","create","allEpisodes","titles","page","params","document","Search","query","setQuery","error","setError","results","setResults","isLoading","setLoading","handleQuery","useCallback","q","api","pageTitle","match","Alert","shows","SearchForm","history","useHistory","Form","onSubmit","preventDefault","Group","controlId","Control","onChange","value","autoComplete","autoCorrect","spellCheck","placeholder","Button","ShowPoster","setPoster","link","SearchResults","s","primaryTitle","startYear","endYear","el","getElementById","sw","scrollWidth","ow","offsetWidth","debounce","func","timer","event","clearTimeout","setTimeout","Seasons","setSeasons","setShowtconst","handleAllSeasons","handleScale","windowResize","allSeasons","handleResize","window","addEventListener","removeEventListener","episodeCount","keys","index","Show","setShow","setAllSeasons","setScale","handleShow","transform","ShowDetails","setData","App","exact","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.efc09fca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ian-ray.5e67dea3.jpg\";","import React from 'react';\r\nimport { Container, Col, Image } from 'react-bootstrap';\r\nimport ian from '../img/ian-ray.jpg';\r\n\r\nfunction About() {\r\n\r\n  return (\r\n    <Container className=\"mt-3 d-flex flex-column justify-content-center align-items-center\">\r\n      <Image id=\"ian\" src={ian} roundedCircle />\r\n      <h1 className=\"text-primary\">About Ian Ray</h1>\r\n      <h4>Developer for hire</h4>\r\n      <Col sm={12} md={10} lg={7} className=\"text-left my-3\">\r\n        <p>I built TVCharts as a way of displaying my technical abilities for prospective companies looking to hire a frontend or full stack developer. It is a simple frontend/backend application using an API and multi-container setup that injests the raw data from IMDB datasets.</p>\r\n        <strong>Built With:</strong>\r\n        <ul>\r\n          <li>React</li>\r\n          <li>NodeJS</li>\r\n          <li>MongoDB</li>\r\n          <li>Nginx</li>\r\n          <li>Docker</li>\r\n        </ul>\r\n        <p>I documented my process and learning experiences in <a href=\"#\">this blog post</a> that provides more details on the technical side of this project</p>\r\n        <p>Please review the code on <a href=\"#\">GitHub repo</a> or email me directly <a href=\"mailto:ian@ianray.com\">ian@ianray.com</a></p>\r\n      </Col>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { List } from './';\r\n\r\nfunction BestWorst(props) {\r\n\r\n  const [best, setBest] = useState([]);\r\n  const [worst, setworst] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.seasons.sort((a, b) => a.averageRating - b.averageRating);\r\n    setBest( props.seasons.slice(-3).reverse() )\r\n    setworst( props.seasons.slice(0, 3).reverse() )\r\n  }, [props]);\r\n\r\n  return (\r\n    <Col className=\"text-left mt-2 mb-4\">\r\n      <Row><h6>Best Episodes</h6></Row>\r\n      {(best.length > 0) &&  <List episodes={best} />}\r\n\r\n      <Row><h6 className=\"mt-3\">Worst Episodes</h6></Row>\r\n      {(worst.length > 0) && <List episodes={worst} />}\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default BestWorst;","import React, { useState, useEffect } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nfunction Episode(props) {\r\n\r\n  const [ep, setEp] = useState(props.episode);\r\n  \r\n  useEffect(() => {\r\n    setEp(props.episode)\r\n  }, [ props.episode ]);\r\n\r\n  const handleHover = (e,z) => {\r\n    let col = e.target.closest('.col-1');\r\n    col.style.zIndex = z\r\n  }\r\n\r\n  const tipT = (props.scale < 0.6) ? 'h4 mb-0' : '';\r\n  const tipV = (props.scale < 0.6) ? 'h6 mb-0' : '';\r\n\r\n  return (\r\n    <Col className={`rating-${Math.floor(ep.averageRating)} mb-1 d-flex justify-content-center align-items-center`}>\r\n      <a target=\"_blank\"\r\n        rel=\"noopener noreferrer\" \r\n        data-tip data-for={props.id} \r\n        href={`https://www.imdb.com/title/${ep.tconst}/`}\r\n        onMouseOver={(e) => handleHover(e,2)}\r\n        onMouseOut={(e) => handleHover(e,1)}\r\n      >\r\n        {ep.averageRating}\r\n      </a>\r\n      <ReactTooltip id={props.id} type=\"dark\">\r\n        <h6 className={tipT}>{ep.title}</h6>\r\n        <em className={tipV}>{ep.numVotes.toLocaleString()} votes</em>\r\n      </ReactTooltip>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default Episode;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Col, Row, Image } from 'react-bootstrap';\r\nimport { SearchForm } from './';\r\nimport logo from '../logo.svg'\r\n\r\nfunction Header() {\r\n\r\n  const [path, setPath] = useState('')\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    setPath(location.pathname)\r\n  }, [location.pathname]);\r\n\r\n  const spacer = <Col md={1} lg={2} className=\"d-none d-sm-none d-md-block\"></Col>;\r\n\r\n  const header = (path !== \"/\") && (\r\n    <Row className=\"bg-light d-flex align-items-center py-2 mb-2\">\r\n      <Col xs={2} className=\"text-left\">\r\n        <Link to=\"/\" className=\"d-flex\">\r\n          <Image id=\"logo\" src={logo} fluid />\r\n          <h5 className=\"ml-2 d-none d-sm-none d-md-block\">TV Charts</h5>\r\n        </Link>\r\n      </Col>\r\n      {spacer}\r\n      <Col xs={8} md={6} lg={4}>\r\n        <SearchForm />\r\n      </Col>\r\n      {spacer}\r\n      <Col xs={2} className=\"text-right\">\r\n        <Link to=\"/about-ian-ray\">\r\n          hire me\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  return header;\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container, Image } from 'react-bootstrap';\r\nimport { SearchForm } from './';\r\nimport logo from '../logo.svg'\r\n\r\nfunction Home() {\r\n\r\n  return (\r\n    <Container fluid className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\r\n      <Image id=\"logo\" src={logo} fluid /> \r\n      <h1 className=\"text-primary\">TV Charts</h1>\r\n      <h6>Charts of TV shows ratings for an entire series</h6>\r\n      <SearchForm />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nfunction List(props) {\r\n\r\n  const [list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setList( props.episodes )\r\n  }, [props]);\r\n\r\n  return (\r\n    <Row>\r\n      {list.map((ep, i) => (\r\n        <Col xs={12} key={i} className={`d-inline-flex flex-columns list-${Math.floor(ep.averageRating)}`}>\r\n          <div>{ep.averageRating.toFixed(1)}</div>\r\n          <span className=\"text-left\">\r\n            <a href={`https://www.imdb.com/title/${ep.tconst}/`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {ep.title}\r\n            </a>\r\n          </span>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default List;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Spinner } from 'react-bootstrap';\r\n\r\nfunction Loading(props) {\r\n\r\n  const [message, setMsg] = useState('');\r\n  \r\n  useEffect(() => {\r\n    setMsg(props.message)\r\n  }, [ props.message ]);\r\n\r\n  return (\r\n    <Col className=\"vh-100 d-flex flex-column justify-content-center align-items-center text-primary\">\r\n      <Spinner animation=\"grow\" variant=\"primary\" />\r\n      <h2 className=\"mt-2\">\r\n        {message}\r\n      </h2>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default Loading;","const url = process.env.REACT_APP_API_URL;\r\n\r\nfunction search(title) {\r\n  return fetch(`${url}/search/${encodeURIComponent(title)}`)\r\n  .then(res => res.json())\r\n  .then(data => data);\r\n}\r\n\r\nfunction show(tconst) {\r\n  return fetch(`${url}/show/${tconst}`)\r\n  .then(res => res.json())\r\n  .then(data => data[0]);\r\n}\r\n\r\nfunction poster(tconst) {\r\n  return fetch(`${url}/poster/${tconst}`)\r\n  .then(res => res.text())\r\n  .then(data => data);\r\n}\r\n\r\nfunction episodes(tconst) {\r\n  return fetch(`${url}/seasons/${tconst}`)\r\n  .then(res => res.json())\r\n  .then(function(response) {\r\n    //Data returns array of Objs unsorted. Loop through items and group into ordered Obj for each season\r\n    let sorted = response.reduce((r, a) => {\r\n      r[a.seasonNumber] = r[a.seasonNumber] || [];\r\n      r[a.seasonNumber].push(a);\r\n      //sort season obj by episode\r\n      r[a.seasonNumber].sort((a,b) => (a.episodeNumber > b.episodeNumber) ? 1 : ((b.episodeNumber > a.episodeNumber) ? -1 : 0));\r\n      return r;\r\n    }, Object.create(null));\r\n    //return both for use in BestWorst and Seasons\r\n    return {\r\n      allEpisodes: response,\r\n      seasons: sorted\r\n    };\r\n  });\r\n}\r\n\r\nexport default {search, show, poster, episodes}","const titles = {\r\n  'home': 'TV Charts for Shows Over All Time',\r\n  'show': 'TV Chart for ',\r\n  'search': 'Search results for: '\r\n}\r\n\r\nexport default function(page, params) {\r\n  let title = (page in titles) ? titles[page] : ''\r\n  document.title = `${title} ${params} | TV Charts`\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Alert, Container, Row, Col } from 'react-bootstrap';\r\nimport { Loading, SearchResults } from './';\r\nimport api from '../api';\r\nimport pageTitle from '../pageTitle';\r\n\r\nfunction Search(props) {\r\n\r\n  const [query, setQuery] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const handleQuery = useCallback((q) => {\r\n    //Reset data\r\n    setQuery(q)\r\n    setError(false)\r\n    setLoading(true)\r\n    setResults([])\r\n\r\n    api.search(q).then(res => {\r\n      if(res.response === false) {\r\n        setError(true)\r\n      } else {\r\n        setError(false)\r\n        setResults(res.results)\r\n        pageTitle('search', q)\r\n      }\r\n      setLoading(false);\r\n    })  \r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    handleQuery(props.match.params.query)\r\n  }, [ props.match.params.query, handleQuery ]) \r\n\r\n  return (\r\n    <Container>\r\n      {isLoading && \r\n        <Loading message={`Searching for '${query}'...`} />\r\n      }\r\n      {(results.length > 0 || error) &&\r\n        <Row><Col className=\"text-left\">Search results for \"{query}\"</Col></Row>\r\n      }\r\n      {(error) &&\r\n        <Alert variant=\"danger\">No Results Found</Alert>\r\n      }\r\n      {(results.length > 0) &&\r\n        <SearchResults shows={results} />\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Search;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\n\r\nfunction SearchForm() {\r\n\r\n  const [query, setQuery] = useState('');\r\n  const history = useHistory();\r\n\r\n  function handleChange(e){\r\n    setQuery(e.target.value)\r\n  }\r\n\r\n  function handleSearch(e) {\r\n    e.preventDefault();\r\n    setQuery('')\r\n    history.push(`/search/${query}`)\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSearch}>\r\n      <Row className=\"d-flex justify-content-center align-items-center\">\r\n        <Col xs={10}>\r\n          <Form.Group controlId=\"showTitle\" className=\"mb-0\">\r\n            <Form.Control \r\n              type=\"text\" \r\n              onChange={handleChange}\r\n              value={query}\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              spellCheck=\"off\"\r\n              placeholder=\"example: The Office\" />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col xs={2} className=\"text-left pl-0\">\r\n          <Button type=\"submit\">Go</Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React, { useState, useEffect } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport api from '../api'\r\n\r\nfunction ShowPoster(props) {\r\n\r\n  const [poster, setPoster] = useState('');\r\n\r\n  useEffect(() => {\r\n    api.poster(props.tconst).then(res => setPoster(res))\r\n  }, [props.tconst]);\r\n\r\n  return (\r\n    <a href={props.link} target={props.target}>\r\n      <Image fluid src={poster} className=\"p-2\" />\r\n    </a>    \r\n  );\r\n}\r\n\r\nexport default ShowPoster;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { ShowPoster } from './'\r\n\r\nfunction SearchResults(props) {\r\n\r\n  const [list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setList(props.shows)\r\n  }, [props.shows]);\r\n\r\n  return (\r\n    <Row>\r\n      {list.map((s, i) => (\r\n        <Col xs={6} sm={4} md={3} lg={2} key={i} className='text-center p-3'>\r\n          <ShowPoster \r\n            tconst={s.tconst}\r\n            target=\"_self\"\r\n            link={`/show/${s.tconst}`}\r\n          />\r\n          <Link to={`/show/${s.tconst}`}>\r\n            <h5 className='mt-2 mb-0'>\r\n              {s.primaryTitle}\r\n            </h5>\r\n          </Link>\r\n          <em>{s.startYear} - {(s.endYear === \"\\\\N\") ? '' : s.endYear}</em>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default SearchResults;","function scale(id) {\r\n  var el = document.getElementById(id)\r\n  if(el) {\r\n    let sw = el.scrollWidth;\r\n    let ow = el.offsetWidth;\r\n    let scale = (sw > ow) ? (ow/sw) : 1;\r\n    return scale;\r\n  } else {\r\n    return 1;\r\n  }\r\n}\r\n\r\nfunction debounce(func) {\r\n  var timer;\r\n  return function(event){\r\n    if(timer) clearTimeout(timer);\r\n    timer = setTimeout(func,200,event);\r\n  };\r\n}\r\n\r\nexport default {scale, debounce}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Episode, Loading } from './';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport windowResize from '../windowResize';\r\nimport api from '../api';\r\n\r\nfunction Seasons(props) {\r\n\r\n  const [seasons, setSeasons] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const setShowtconst = useCallback((tconst) => {\r\n    api.episodes(tconst)\r\n    .then((res) => {\r\n      setSeasons(res.seasons);\r\n      setLoading(false);\r\n      handleAllSeasons(res.allEpisodes);\r\n      handleScale(windowResize.scale('ratings'))\r\n    })\r\n  }, [ props.tconst ]);\r\n\r\n  const handleAllSeasons = useCallback(allSeasons => {\r\n    props.handleAllSeasons(allSeasons)\r\n  }, [])\r\n\r\n  const handleScale = useCallback((scale) => {\r\n    props.handleScale(scale)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setShowtconst(props.tconst)\r\n    //Resize window trigger with debounce timer\r\n    const handleResize = windowResize.debounce(e => {\r\n      let scale = windowResize.scale('ratings');\r\n      handleScale(scale)\r\n    });\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [ props.tconst, handleScale, setShowtconst ])\r\n\r\n  return (\r\n    <Row>\r\n      {isLoading ? (\r\n        <Loading message={`Loading ${props.episodeCount} episodes...`} />\r\n      ) : (\r\n        Object.keys(seasons).map((s,index) => (\r\n          <Col xs={1} key={index} className=\"mr-1 p-0\">\r\n            <strong>{s}</strong>\r\n            {seasons[s].map((e,i) => (\r\n              <Episode\r\n                key={i}\r\n                episode={e}\r\n                scale={props.scale}\r\n                id={`S${e.seasonNumber}E${e.episodeNumber}`}\r\n              />\r\n            ))}\r\n          </Col>\r\n        ))\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Seasons;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Alert, Row, Col } from 'react-bootstrap';\r\nimport { BestWorst, Loading, Seasons, ShowDetails } from './';\r\nimport api from '../api';\r\nimport pageTitle from '../pageTitle';\r\n\r\nfunction Show(props) {\r\n  const [show, setShow] = useState({});\r\n  const [allSeasons, setAllSeasons] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [scale, setScale] = useState(1);\r\n\r\n  const handleShow = useCallback((tconst) => {\r\n    api.show(tconst).then(data => {\r\n      if(!data) {\r\n        setError(true)\r\n        setLoading(false)\r\n      } else {\r\n        setError(false)\r\n        setShow(data)\r\n        setLoading(false)\r\n        pageTitle('show', data.primaryTitle)  \r\n      }\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    handleShow(props.match.params.tconst)\r\n  }, [props.match.params.tconst, handleShow]);\r\n\r\n\r\n  return (\r\n    <div className=\"px-1\">\r\n      {error && \r\n        <Col xs={3}>\r\n          <Alert variant=\"danger\">Show Not Found</Alert>\r\n        </Col>\r\n      }\r\n      {isLoading && <Loading />}\r\n      {(!isLoading && !error) &&\r\n        <Row>\r\n          <Col lg={2} md={3} sm={4}>\r\n            <ShowDetails show={show} />\r\n            <BestWorst seasons={allSeasons} />\r\n          </Col>\r\n          <Col lg={10} md={9} sm={8} id=\"ratings\" style={{transform: `scale(${scale}`}}>\r\n            <Seasons\r\n              tconst={show.tconst}\r\n              episodeCount={show.episodeCount}\r\n              handleAllSeasons={setAllSeasons}\r\n              handleScale={setScale}\r\n              scale={scale}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Show;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { ShowPoster } from  './'\r\n\r\nfunction ShowDetails(props) {\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setData(props.show);\r\n  }, [props.show]);\r\n\r\n  return (\r\n    <Row className=\"text-left\">\r\n      <Col xs={6} sm={10}>\r\n        {data.tconst &&\r\n          <ShowPoster \r\n            tconst={data.tconst}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            link={`https://www.imdb.com/title/${data.tconst}/`}\r\n          />      \r\n        }\r\n      </Col>\r\n      <Col xs={12}>\r\n        <h4 className=\"mb-0\">{data.primaryTitle}</h4>\r\n        <small>\r\n          <a href={`https://www.imdb.com/title/${data.tconst}/`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"mr-2\">\r\n            IMDb\r\n          </a>\r\n          {data.startYear} - {(data.endYear === \"\\\\N\") ? '' : data.endYear}\r\n        </small>\r\n      </Col>\r\n      <Col xs={12}>\r\n        <h4 className=\"mt-2\">\r\n          <strong className='pr-2'>{data.averageRating}</strong>\r\n          <small>\r\n            ({(data.numVotes) && data.numVotes.toLocaleString()})\r\n          </small>\r\n        </h4>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ShowDetails;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { About, Header, Home, Search, Show } from './views';\nimport './styles/App.scss';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Container fluid>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about-ian-ray\" component={About} />\n            <Route exact path=\"/search/:query\" component={Search} />\n            <Route exact path=\"/show/:tconst\" component={Show} />\n          </Switch>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.a915ee6b.svg\";"],"sourceRoot":""}