{"version":3,"sources":["views/BestWorst.js","views/Episode.js","views/Home.js","views/List.js","views/Loading.js","api.js","pageTitle.js","views/Search.js","views/SearchForm.js","views/ShowPoster.js","views/SearchResults.js","windowResize.js","views/Seasons.js","views/Show.js","views/ShowDetails.js","App.js","serviceWorker.js","index.js"],"names":["BestWorst","props","useState","best","setBest","worst","setworst","useEffect","seasons","sort","a","b","averageRating","slice","reverse","Col","className","Row","length","episodes","Episode","episode","ep","setEp","Math","floor","target","rel","data-tip","data-for","id","href","tconst","type","title","numVotes","toLocaleString","Home","Container","List","list","setList","map","i","xs","key","toFixed","Loading","message","setMsg","Spinner","animation","variant","url","process","search","fetch","encodeURIComponent","then","res","json","data","show","poster","text","response","sorted","reduce","r","seasonNumber","push","episodeNumber","Object","create","allEpisodes","titles","page","params","document","Search","query","setQuery","error","setError","results","setResults","isLoading","setLoading","handleQuery","useCallback","q","api","pageTitle","match","Alert","shows","SearchForm","history","useHistory","Form","onSubmit","e","preventDefault","Group","controlId","Control","onChange","value","autoComplete","autoCorrect","spellCheck","placeholder","Button","ShowPoster","setPoster","link","Image","fluid","src","SearchResults","s","sm","md","to","primaryTitle","startYear","endYear","scale","el","getElementById","sw","scrollWidth","ow","offsetWidth","debounce","func","timer","event","clearTimeout","setTimeout","Seasons","setSeasons","setShowtconst","handleAllSeasons","handleScale","windowResize","allSeasons","handleResize","window","addEventListener","removeEventListener","episodeCount","keys","index","Show","setShow","setAllSeasons","setScale","handleShow","lg","style","transform","ShowDetails","setData","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.56565abd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { List } from './';\r\n\r\nfunction BestWorst(props) {\r\n\r\n  const [best, setBest] = useState([]);\r\n  const [worst, setworst] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.seasons.sort((a, b) => a.averageRating - b.averageRating);\r\n    setBest( props.seasons.slice(-3).reverse() )\r\n    setworst( props.seasons.slice(0, 3).reverse() )\r\n  }, [props]);\r\n\r\n  return (\r\n    <Col className=\"text-left mt-2 mb-4\">\r\n      <Row><h6>Best Episodes</h6></Row>\r\n      {(best.length > 0) &&  <List episodes={best} />}\r\n\r\n      <Row><h6 className=\"mt-3\">Worst Episodes</h6></Row>\r\n      {(worst.length > 0) && <List episodes={worst} />}\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default BestWorst;","import React, { useState, useEffect } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nfunction Episode(props) {\r\n\r\n  const [ep, setEp] = useState(props.episode);\r\n  \r\n  useEffect(() => {\r\n    setEp(props.episode)\r\n  }, [ props.episode ]);\r\n\r\n  return (\r\n    <Col className={`rating-${Math.floor(ep.averageRating)} mb-1 d-flex justify-content-center align-items-center`}>\r\n      <a target=\"_blank\"\r\n        rel=\"noopener noreferrer\" \r\n        data-tip data-for={props.id} \r\n        href={`https://www.imdb.com/title/${ep.tconst}/`}\r\n      >\r\n        {ep.averageRating}\r\n      </a>\r\n      <ReactTooltip id={props.id} type=\"dark\">\r\n        <h6 className='mb-0'>{ep.title}</h6>\r\n        <em>{ep.numVotes.toLocaleString()} votes</em>\r\n      </ReactTooltip>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default Episode;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { SearchForm } from './';\r\n\r\nfunction Home() {\r\n\r\n  return (\r\n    <Container className=\"vh-100 d-flex flex-column justify-content-center align-items-center\">\r\n      <h1>TV Charts</h1>\r\n      <h6>Episode ratings for the entire run of series</h6>\r\n      <SearchForm />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nfunction List(props) {\r\n\r\n  const [list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setList( props.episodes )\r\n  }, [props]);\r\n\r\n  return (\r\n    <Row>\r\n      {list.map((ep, i) => (\r\n        <Col xs={12} key={i} className={`d-inline-flex flex-columns list-${Math.floor(ep.averageRating)}`}>\r\n          <div>{ep.averageRating.toFixed(1)}</div>\r\n          <span className=\"text-left\">\r\n            <a href={`https://www.imdb.com/title/${ep.tconst}/`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {ep.title}\r\n            </a>\r\n          </span>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default List;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Spinner } from 'react-bootstrap';\r\n\r\nfunction Loading(props) {\r\n\r\n  const [message, setMsg] = useState('');\r\n  \r\n  useEffect(() => {\r\n    setMsg(props.message)\r\n  }, [ props.message ]);\r\n\r\n  return (\r\n    <Col className=\"vh-100 d-flex flex-column justify-content-center align-items-center text-primary\">\r\n      <Spinner animation=\"grow\" variant=\"primary\" />\r\n      <h2 className=\"mt-2\">\r\n        {message}\r\n      </h2>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default Loading;","const url = process.env.REACT_APP_API_URL;\r\n\r\nfunction search(title) {\r\n  return fetch(`${url}/search/${encodeURIComponent(title)}`)\r\n  .then(res => res.json())\r\n  .then(data => data);\r\n}\r\n\r\nfunction show(tconst) {\r\n  return fetch(`${url}/show/${tconst}`)\r\n  .then(res => res.json())\r\n  .then(data => data[0]);\r\n}\r\n\r\nfunction poster(tconst) {\r\n  return fetch(`${url}/poster/${tconst}`)\r\n  .then(res => res.text())\r\n  .then(data => data);\r\n}\r\n\r\nfunction episodes(tconst) {\r\n  return fetch(`${url}/seasons/${tconst}`)\r\n  .then(res => res.json())\r\n  .then(function(response) {\r\n    //Data returns array of Objs unsorted. Loop through items and group into ordered Obj for each season\r\n    let sorted = response.reduce((r, a) => {\r\n      r[a.seasonNumber] = r[a.seasonNumber] || [];\r\n      r[a.seasonNumber].push(a);\r\n      //sort season obj by episode\r\n      r[a.seasonNumber].sort((a,b) => (a.episodeNumber > b.episodeNumber) ? 1 : ((b.episodeNumber > a.episodeNumber) ? -1 : 0));\r\n      return r;\r\n    }, Object.create(null));\r\n    //return both for use in BestWorst and Seasons\r\n    return {\r\n      allEpisodes: response,\r\n      seasons: sorted\r\n    };\r\n  });\r\n}\r\n\r\nexport default {search, show, poster, episodes}","const titles = {\r\n  'home': 'TV Charts for Shows Over All Time',\r\n  'show': 'TV Chart for ',\r\n  'search': 'Search results for: '\r\n}\r\n\r\nexport default function(page, params) {\r\n  let title = (page in titles) ? titles[page] : ''\r\n  document.title = `${title} ${params} | TV Charts`\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Alert, Container, Row, Col } from 'react-bootstrap';\r\nimport { Loading, SearchForm, SearchResults } from './';\r\nimport api from '../api';\r\nimport pageTitle from '../pageTitle';\r\n\r\nfunction Search(props) {\r\n\r\n  const [query, setQuery] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const handleQuery = useCallback((q) => {\r\n    //Reset data\r\n    setQuery(q)\r\n    setError(false)\r\n    setLoading(true)\r\n    setResults([])\r\n\r\n    api.search(q).then(res => {\r\n      if(res.response === false) {\r\n        setError(true)\r\n      } else {\r\n        setError(false)\r\n        setResults(res.results)\r\n        pageTitle('search', q)\r\n      }\r\n      setLoading(false);\r\n    })  \r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    handleQuery(props.match.params.query)\r\n  }, [ props.match.params.query, handleQuery ]) \r\n\r\n  return (\r\n    <Container>\r\n      <SearchForm />\r\n      {isLoading && \r\n        <Loading message={`Searching for '${query}'...`} />\r\n      }\r\n      {(results.length > 0 || error) &&\r\n        <Row><Col className=\"text-left\">Search results for \"{query}\"</Col></Row>\r\n      }\r\n      {(error) &&\r\n        <Alert variant=\"danger\">No Results Found</Alert>\r\n      }\r\n      {(results.length > 0) &&\r\n        <SearchResults shows={results} />\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Search;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\n\r\nfunction SearchForm() {\r\n\r\n  const [query, setQuery] = useState('');\r\n  const history = useHistory();\r\n\r\n  function handleChange(e){\r\n    setQuery(e.target.value)\r\n  }\r\n\r\n  function handleSearch(e) {\r\n    e.preventDefault();\r\n    setQuery('')\r\n    history.push(`/search/${query}`)\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSearch} className=\"mt-3\">\r\n      <Row>\r\n        <Col xs={10}>\r\n          <Form.Group controlId=\"showTitle\">\r\n            <Form.Control \r\n              type=\"text\" \r\n              onChange={handleChange}\r\n              value={query}\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              spellCheck=\"off\"\r\n              placeholder=\"example: The Office\" />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col xs={2}>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React, { useState, useEffect } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport api from '../api'\r\n\r\nfunction ShowPoster(props) {\r\n\r\n  const [poster, setPoster] = useState('');\r\n\r\n  useEffect(() => {\r\n    api.poster(props.tconst).then(res => setPoster(res))\r\n  }, [props.tconst]);\r\n\r\n  return (\r\n    <a href={props.link} target={props.target}>\r\n      <Image fluid src={poster} className=\"p-2\" />\r\n    </a>    \r\n  );\r\n}\r\n\r\nexport default ShowPoster;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { ShowPoster } from './'\r\n\r\nfunction SearchResults(props) {\r\n\r\n  const [list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setList(props.shows)\r\n  }, [props.shows]);\r\n\r\n  return (\r\n    <Row>\r\n      {list.map((s, i) => (\r\n        <Col xs={6} sm={4} md={3} key={i} className='text-center p-3'>\r\n          <ShowPoster \r\n            tconst={s.tconst}\r\n            target=\"_self\"\r\n            link={`/show/${s.tconst}`}\r\n          />\r\n          <Link to={`/show/${s.tconst}`}>\r\n            <h5 className='mt-2 mb-0'>\r\n              {s.primaryTitle}\r\n            </h5>\r\n          </Link>\r\n          <em>{s.startYear} - {(s.endYear === \"\\\\N\") ? '' : s.endYear}</em>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default SearchResults;","function scale(id) {\r\n  var el = document.getElementById(id)\r\n  if(el) {\r\n    let sw = el.scrollWidth;\r\n    let ow = el.offsetWidth;\r\n    let scale = (sw > ow) ? (ow/sw) : 1;\r\n    return scale;\r\n  } else {\r\n    return 1;\r\n  }\r\n}\r\n\r\nfunction debounce(func) {\r\n  var timer;\r\n  return function(event){\r\n    if(timer) clearTimeout(timer);\r\n    timer = setTimeout(func,200,event);\r\n  };\r\n}\r\n\r\nexport default {scale, debounce}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Episode, Loading } from './';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport windowResize from '../windowResize';\r\nimport api from '../api';\r\n\r\nfunction Seasons(props) {\r\n\r\n  const [seasons, setSeasons] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const setShowtconst = useCallback((tconst) => {\r\n    api.episodes(tconst)\r\n    .then((res) => {\r\n      setSeasons(res.seasons);\r\n      setLoading(false);\r\n      handleAllSeasons(res.allEpisodes);\r\n      handleScale(windowResize.scale('ratings'))\r\n    })\r\n  }, [ props.tconst ]);\r\n\r\n  const handleAllSeasons = useCallback(allSeasons => {\r\n    props.handleAllSeasons(allSeasons)\r\n  }, [])\r\n\r\n  const handleScale = useCallback((scale) => {\r\n    props.handleScale(scale)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setShowtconst(props.tconst)\r\n    //Resize window trigger with debounce timer\r\n    const handleResize = windowResize.debounce(e => {\r\n      let scale = windowResize.scale('ratings');\r\n      handleScale(scale)\r\n    });\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [ props.tconst, handleScale, setShowtconst ])\r\n\r\n  return (\r\n    <Row>\r\n      {isLoading ? (\r\n        <Loading message={`Loading ${props.episodeCount} episodes...`} />\r\n      ) : (\r\n        Object.keys(seasons).map((s,index) => (\r\n          <Col xs={1} key={index} className=\"mr-1 p-0\">\r\n            <strong>{s}</strong>\r\n            {seasons[s].map((e,i) => (\r\n              <Episode\r\n                key={i}\r\n                episode={e}\r\n                scale={props.scale}\r\n                id={`S${e.seasonNumber}E${e.episodeNumber}`}\r\n              />\r\n            ))}\r\n          </Col>\r\n        ))\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Seasons;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Alert, Row, Col } from 'react-bootstrap';\r\nimport { BestWorst, Loading, Seasons, ShowDetails, SearchForm } from './';\r\nimport api from '../api';\r\nimport pageTitle from '../pageTitle';\r\n\r\nfunction Show(props) {\r\n  const [show, setShow] = useState({});\r\n  const [allSeasons, setAllSeasons] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [scale, setScale] = useState(1);\r\n\r\n  const handleShow = useCallback((tconst) => {\r\n    api.show(tconst).then(data => {\r\n      if(!data) {\r\n        setError(true)\r\n        setLoading(false)\r\n      } else {\r\n        setError(false)\r\n        setShow(data)\r\n        setLoading(false)\r\n        pageTitle('show', data.primaryTitle)  \r\n      }\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    handleShow(props.match.params.tconst)\r\n  }, [props.match.params.tconst, handleShow]);\r\n\r\n  return (\r\n    <div className=\"px-1\">\r\n      <Row>\r\n        <SearchForm />\r\n      </Row>\r\n      {error && \r\n        <Col xs={3}>\r\n          <Alert variant=\"danger\">Show Not Found</Alert>\r\n        </Col>\r\n      }\r\n      {isLoading && <Loading />}\r\n      {(!isLoading && !error) &&\r\n        <Row>\r\n          <Col lg={2} md={3} sm={4}>\r\n            <ShowDetails show={show} />\r\n            <BestWorst seasons={allSeasons} />\r\n          </Col>\r\n          <Col lg={10} md={9} sm={8} id=\"ratings\" style={{transform: `scale(${scale}`}}>\r\n            <Seasons\r\n              tconst={show.tconst}\r\n              episodeCount={show.episodeCount}\r\n              handleAllSeasons={setAllSeasons}\r\n              handleScale={setScale}\r\n              scale={scale}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Show;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { ShowPoster } from  './'\r\n\r\nfunction ShowDetails(props) {\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setData(props.show);\r\n  }, [props.show]);\r\n\r\n  return (\r\n    <Row className=\"text-left\">\r\n      <Col xs={6} sm={10}>\r\n        {data.tconst &&\r\n          <ShowPoster \r\n            tconst={data.tconst}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            link={`https://www.imdb.com/title/${data.tconst}/`}\r\n          />      \r\n        }\r\n      </Col>\r\n      <Col xs={12}>\r\n        <h4 className=\"mb-0\">{data.primaryTitle}</h4>\r\n        <small>{data.startYear} - {(data.endYear === \"\\\\N\") ? '' : data.endYear}</small>\r\n      </Col>\r\n      <Col xs={12}>\r\n        <h4 className=\"mt-2\">\r\n          <strong className='pr-2'>{data.averageRating}</strong>\r\n          <small>\r\n            ({(data.numVotes) && data.numVotes.toLocaleString()})\r\n          </small>\r\n          <a href={`https://www.imdb.com/title/${data.tconst}/`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"ml-2 small\">\r\n            imdb\r\n          </a>\r\n        </h4>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ShowDetails;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { Home, Search, Show } from './views';\nimport './styles/App.scss';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Container fluid>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/search/:query\" component={Search} />\n            <Route exact path=\"/show/:tconst\" component={Show} />\n          </Switch>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}